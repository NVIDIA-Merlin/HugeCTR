name: github-ci-test

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: self-hosted

    container: 
      image: gitlab-master.nvidia.com/zehuanw/hugectr:devel
      volumes: 
        - /home/hugectr/actions-runner/dataset:/dataset

    steps:
    - uses: actions/checkout@master
    
    - name: Update submodule
      working-directory: ${{runner.workspace}}
      run: git submodule update --init --recursive

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSM=70 ..

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: make -j

    - name: utest
      working-directory: ${{runner.workspace}}/build/bin
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ./layers_test
        ./embedding_test
        
