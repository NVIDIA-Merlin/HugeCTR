# Copyright (c) 2021, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG CUDA_VERSION=11.2.1
ARG CUDNN_VERSION=8
ARG UBUNTU_VERSION=20.04
FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION} AS devel

ARG CMAKE_VERSION=3.19.6
ARG PYTHON_VERSION=3.8
ARG RAPIDS_VERSION=21.06
ARG TF_VERSION=2.6.0

ARG RELEASE=false
ARG SM="70;75;80"
ARG USE_NVTX=OFF

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        vim \
        gdb \
        git \
        wget \
        tar \
        curl \
        cmake \
        python-dev \
        python3-dev \
        python3-pip \
        python3-setuptools \
        python3-wheel \
        clang-format \
        libboost-all-dev && \
    rm -rf /var/lib/apt/lists/*

RUN CMAKE_MAJOR_VERSION=`echo ${CMAKE_VERSION} | cut -d'.' -f1,2` && \
    mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://cmake.org/files/v$CMAKE_MAJOR_VERSION/cmake-${CMAKE_VERSION}-Linux-x86_64.sh && \
    mkdir -p /usr/local && \
    /bin/sh /var/tmp/cmake-${CMAKE_VERSION}-Linux-x86_64.sh --prefix=/usr/local --skip-license && \
    rm -rf /var/tmp/cmake-${CMAKE_VERSION}-Linux-x86_64.sh
ENV PATH=/usr/local/bin:$PATH

RUN pip3 install --upgrade pip && \
    pip3 install --no-cache-dir numpy==1.19.2 pandas sklearn nvtx-plugins jupyter tensorflow==${TF_VERSION}

ENV CONDA_PREFIX=/opt/conda
ENV NCCL_LAUNCH_MODE=PARALLEL

RUN mkdir -p /var/tmp && cd /var/tmp && git clone --depth=1 --branch branch-${RAPIDS_VERSION} https://github.com/rapidsai/rmm.git rmm && cd - && \
    cd /var/tmp/rmm && \
    mkdir -p build && cd build && \
    cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DBUILD_TESTS=OFF && \
    make -j$(nproc) && \
    make -j$(nproc) install && \
    rm -rf /var/tmp/rmm

RUN mkdir -p /usr/local/nvidia/lib64 && \
    ln -s /usr/local/cuda/lib64/libcusolver.so /usr/local/nvidia/lib64/libcusolver.so.10

RUN if [ "$RELEASE" = "true" ]; \
    then \
      mkdir -p /var/tmp && cd /var/tmp && git clone --depth=1 --branch master https://github.com/NVIDIA/HugeCTR.git HugeCTR && cd - && \
      cd /var/tmp/HugeCTR && \
      git submodule update --init --recursive && \
      cd sparse_operation_kit && \
      bash ./install.sh --SM=$SM --USE_NVTX=$USE_NVTX && \
      rm -rf /var/tmp/HugeCTR; \
    else \
      echo "Build container for development successfully"; \
    fi
